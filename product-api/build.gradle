plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'idea'
    id 'jacoco'
    id 'com.kageiit.jacobo' version '2.1.0'
    id 'org.barfuin.gradle.jacocolog' version '3.1.0'
    id 'com.github.ben-manes.versions' version '0.51.0'
}

group = 'br.com.github.kalilventura'
version = '1.0.0'
description = ''

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

springBoot {
    buildInfo {
        properties {
            group = project.group
            artifact = 'product-api'
            version = project.version
        }
    }
}

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = '2023.0.2'
    springBootVersion = '3.3.2'
    mapstructVersion = '1.6.0'
    lombokVersion = '1.18.34'
    liquibaseVersion = '4.29.1'
    wiremockVersion = '3.9.1'
    mockitoVersion = '5.12.0'
    guavaVersion = '33.3.0-jre'
    annotationsVersion = '24.1.0'
    testcontainersVersion = '1.20.1'
    postgresVersion = '42.7.3'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // MapStruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Liquibase
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // PostgresSQL
    runtimeOnly "org.postgresql:postgresql:${postgresVersion}"

    // Guava
    implementation "com.google.guava:guava:${guavaVersion}"

    // JetBrains Annotations
    implementation "org.jetbrains:annotations:${annotationsVersion}"

    // Test Dependencies
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.jupiter', module: 'junit-jupiter'
        exclude group: 'org.junit.jupiter', module: 'junit-jupiter-engine'
        exclude group: 'org.mockito', module: 'mockito-core'
        exclude group: 'org.mockito', module: 'mockito-junit-jupiter'
    }
    testImplementation "org.wiremock:wiremock:${wiremockVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    configure(options) {
        options.compilerArgs << '-parameters'
    }
}
